{"version":3,"sources":["reportWebVitals.js","store/ui.js","store/sudoku.js","components/SudokuGrid/SudokuCell.js","components/SudokuGrid/SudokuGrid.js","components/SudokuGrid/index.js","components/Button/index.js","components/Button/Button.js","store/solve.js","components/ActionBar/index.js","components/ActionBar/ActionBar.js","components/NumberBar/index.js","components/NumberBar/NumberBar.js","components/ButtonGroup/index.js","components/ButtonGroup/ButtonGroup.js","components/ButtonBar/index.js","components/ButtonBar/ButtonBar.js","components/StepList/StepList.js","components/StepList/index.js","components/App/index.js","components/App/App.js","store/toggle.js","store/root.js","store/configureStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_SELECTION_MODE","SELECT_CELL","CLEAR_SELECTED","SET_PENCIL_MODE","setSelectionMode","value","type","selectCell","index","clearSelected","getSelected","state","ui","selected","getPencilMode","getMode","_","reduce","Object","keys","mode","undefined","colors","epics","combineEpics","initialState","selecting","pencilMode","normal","corner","center","color","show","find","reducer","LOAD_SUDOKU","UPDATE_VALUES","SET_VALUE","SET_CORNER","SET_CENTER","SET_COLOR","updateValues","setValue","setCorner","setCenter","action","getCellValue","sudoku","given","getCellData","action$","state$","pipe","ofType","map","filter","mergeMap","toSelect","chain","cell","getCellsForValues","getAllCells","without","getMarkedCells","setColor","setPencilMarks","set","indexOf","first","sort","boxStarts","isColumn","pair","getColumn","isRow","getRow","cellid","Math","floor","getBox","getColumnIndexes","column","range","getRowIndexes","row","getBoxIndexes","boxid","i","flatten","id","data","contains","getAffectedCells","unique","getAffectedPairCells","isBox","tap","result","console","log","limit","box","boxIndexes","length","values","union","getPossibleCells","ids","getCenters","checkMethods","indexMethods","object","cornerClass","boxPosition","SudokuCell","useSelector","isCellSelected","classNames","cornerSpans","className","centerSpan","pencilMarks","backgroundColor","colorMark","tinycolor","mix","getCellColor","style","SudokuRow","SudokuGrid","dispatch","useDispatch","divRef","useRef","isSelecting","handleEvent","event","clientRect","current","getBoundingClientRect","gridSize","width","cellIndex","trunc","clientY","y","clientX","x","shiftKey","ref","onMouseDown","onMouseOver","onMouseUp","Button","label","onClick","toggle","buttonClassNames","START","NAKED_SINGLES","HIDDEN_SINGLES","NAKED_PAIRS","POINTING_PAIRS","ADD_STEPS","APPLY_STEPS","CHECK_VALUES","ADD_ACTIONS","NEXT_ACTION","REMOVE_ACTION","CLEAR_ACTIONS","MORE_ACTIONS","LAST_ACTION","addSteps","steps","applySteps","getCellName","getPairCellName","indexes","getStep","method","cellName","getPairStep","alreadyFound","findIndex","solve","step","actions","check","cells","allCells","from","missing","invalid","groupBy","results","message","alert","ignoreElements","single","affected","raw","list","findHiddenSingles","singles","group","p","findNakedPairs","pairs","acc","byValue","findPointingPairs","every","last","concatMap","timer","startWith","unresolved","compact","nextAction","lastAction","buttons","name","a","rest","ActionBar","getSolveActions","NumberBar","colorStyle","ButtonGroup","buttonState","clickHandler","newState","button","ButtonBar","modes","getPencilModes","getStepName","getPairAffected","StepList","getSteps","key","App","onKeyDown","e","tabIndex","TOGGLE_ON","title","on","rootEpic","uiEpics","sudokuEpics","toggleEpics","solveEpics","appReducer","combineReducers","rootReducer","configureStore","epicMiddleware","createEpicMiddleware","dependencies","composeEnhancers","compose","store","createStore","applyMiddleware","run","window","___INITIAL_STATE___","ReactDOM","render","StrictMode","document","getElementById","testSudoku"],"mappings":"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","file":"static/js/main.3c0b064b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineEpics } from 'redux-observable'\r\nimport tinycolor from 'tinycolor2'\r\nimport _ from 'underscore'\r\n\r\n// constants\r\nconst SET_SELECTION_MODE = 'ui/SET_SELECTION_MODE'\r\nconst SELECT_CELL = 'ui/SELECT_CELL'\r\nconst CLEAR_SELECTED = 'ui/CLEAR_SELECTED'\r\nconst SET_PENCIL_MODE = 'ui/SET_PENCIL_MODE'\r\n\r\n// actions\r\nexport const setSelectionMode = (value) => ({ type: SET_SELECTION_MODE, value })\r\nexport const selectCell = (index) => ({ type: SELECT_CELL, index })\r\nexport const clearSelected = () => ({ type: CLEAR_SELECTED })\r\nexport const setPencilMode = (mode) => ({ type: SET_PENCIL_MODE, mode })\r\n\r\n// selector\r\nexport const isSelecting = (state, index) => state.ui.selecting\r\nexport const isCellSelected = (state, index) => state.ui.selected[index]\r\nexport const getSelected = (state) => state.ui.selected\r\nexport const getPencilModes = (state) => state.ui.pencilMode\r\nexport const getPencilMode = (state) => getMode(state, 'pencilMode') || 'normal'\r\n\r\nconst getMode = (state, type) => {\r\n  const mode = _.reduce(\r\n    Object.keys(state.ui[type]),\r\n    (mode, index) => (state.ui[type][index] ? index : mode),\r\n    undefined\r\n  )\r\n  return mode\r\n}\r\n\r\nexport const fromColors = (added, base) => {\r\n  var mix = [0, 0, 0, 0]\r\n  mix[3] = 1 - (1 - added[3]) * (1 - base[3]) // alpha\r\n  mix[0] = Math.round(\r\n    (added[0] * added[3]) / mix[3] + (base[0] * base[3] * (1 - added[3])) / mix[3]\r\n  ) // red\r\n  mix[1] = Math.round(\r\n    (added[1] * added[3]) / mix[3] + (base[1] * base[3] * (1 - added[3])) / mix[3]\r\n  ) // green\r\n  mix[2] = Math.round(\r\n    (added[2] * added[3]) / mix[3] + (base[2] * base[3] * (1 - added[3])) / mix[3]\r\n  ) // blue\r\n}\r\nexport const getCellColor = (colorMark, selected) => {\r\n  return colorMark && selected\r\n    ? tinycolor.mix(colors[colorMark - 1], '#ffffa0')\r\n    : colorMark\r\n    ? colors[colorMark - 1]\r\n    : selected\r\n    ? '#ffffa0'\r\n    : 'snow'\r\n}\r\nexport const colors = [\r\n  '#0074D9AA', //blue\r\n  '#7FDBFFAA', //aqua\r\n  '#39CCCCAA', //teal\r\n  '#3D9970AA', //olive\r\n  '#FFDC0088', //yellow\r\n  '#FF851BAA', //orange\r\n  '#85144B44', //maroon\r\n  '#B10DC9FF', //purple\r\n  '#DDDDDDFF' //silver\r\n]\r\n\r\n// epics\r\nexport const epics = combineEpics()\r\n\r\n// reducer\r\nconst initialState = {\r\n  selecting: false,\r\n  selected: [],\r\n  pencilMode: {\r\n    normal: true,\r\n    corner: false,\r\n    center: false,\r\n    color: false,\r\n    show: false,\r\n    find: false\r\n  }\r\n}\r\n\r\nexport const reducer = (state = initialState, { type, value, index, mode }) => {\r\n  switch (type) {\r\n    case SET_SELECTION_MODE:\r\n      return { ...state, selecting: value }\r\n    case CLEAR_SELECTED:\r\n      return { ...state, selected: [] }\r\n    case SELECT_CELL:\r\n      return { ...state, selected: { ...state.selected, [index]: true } }\r\n    case SET_PENCIL_MODE:\r\n      return { ...state, pencilMode: mode }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { combineEpics, ofType } from 'redux-observable'\r\nimport { map, mergeMap, filter } from 'rxjs/operators'\r\nimport _ from 'underscore'\r\nimport { getSelected, getPencilMode, selectCell, clearSelected } from 'store/ui'\r\n\r\n// constants\r\nexport const LOAD_SUDOKU = 'sudoku/LOAD_SUDOKU'\r\nexport const CHECK_VALUES = 'sudoku/CHECK_VALUES'\r\nexport const UPDATE_VALUES = 'sudoku/UPDATE_VALUES'\r\nexport const SET_VALUE = 'sudoku/SET_VALUE'\r\nexport const SET_CORNER = 'sudoku/SET_CORNER'\r\nexport const SET_CENTER = 'sudoku/SET_CENTER'\r\nexport const SET_COLOR = 'sudoku/SET_COLOR'\r\nexport const SET_PAIRS = 'sudoku/SET_PAIRS'\r\nexport const SET_PENCIL_MARK = 'sudoku/SET_PENCIL_MARK'\r\n\r\n// actions\r\nexport const loadSudoku = (values) => ({ type: LOAD_SUDOKU, values })\r\nexport const checkValues = () => ({ type: CHECK_VALUES })\r\nexport const updateValues = (value) => ({ type: UPDATE_VALUES, value })\r\nexport const setPairs = (value) => ({ type: SET_PAIRS, value })\r\nexport const setValue = (index, value) => ({ type: SET_VALUE, index, value })\r\nconst setCorner = (index, value) => ({ type: SET_CORNER, index, value })\r\nexport const setCenter = (index, value, action) => ({ type: SET_CENTER, index, value, action })\r\nconst setColor = (index, value) => ({ type: SET_COLOR, index, value })\r\n\r\n// selectors\r\nexport const getCellValue = (state, index) =>\r\n  state.sudoku[index] ? state.sudoku[index].given || state.sudoku[index].value : 0\r\nexport const getCellData = (state, index) => (state.sudoku[index] ? state.sudoku[index] : 0)\r\nexport const getCellsForValues = (state, value) =>\r\n  _.chain(state.sudoku)\r\n    .filter((cell) => cell.given === value || cell.value === value)\r\n    .map((cell) => cell.index)\r\n    .value()\r\nexport const getUnresolvedCells = (state) =>\r\n  _.chain(state.sudoku)\r\n    .filter((cell) => !cell.given && !cell.value)\r\n    .map((cell) => cell.index)\r\n    .compact()\r\n    .value()\r\n\r\n// epics\r\nexport const epics = combineEpics(\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(UPDATE_VALUES),\r\n      map(({ value }) => ({\r\n        mode: getPencilMode(state$.value),\r\n        value\r\n      })),\r\n      filter(({ mode, value }) => mode === 'show'),\r\n      mergeMap(({ value }) => {\r\n        const toSelect = getCellsForValues(state$.value, value)\r\n        const actions = [\r\n          clearSelected(),\r\n          ...(value !== undefined ? _.map(toSelect, (index) => selectCell(index, value)) : [])\r\n        ]\r\n        return actions\r\n      })\r\n    ),\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(UPDATE_VALUES),\r\n      map(({ value }) => ({\r\n        mode: getPencilMode(state$.value),\r\n        value\r\n      })),\r\n      filter(({ mode, value }) => mode === 'find'),\r\n      mergeMap(({ value }) => {\r\n        const toSelect = getAllCells(state$.value, value)\r\n        const actions = [\r\n          clearSelected(),\r\n          ...(value !== undefined ? _.map(toSelect, (index) => selectCell(index, value)) : [])\r\n        ]\r\n        return actions\r\n      })\r\n    ),\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(UPDATE_VALUES),\r\n      map(({ value }) => ({\r\n        mode: getPencilMode(state$.value),\r\n        value\r\n      })),\r\n      filter(({ mode }) => mode === 'pairs'),\r\n      mergeMap(({ value }) => {\r\n        const toSelect = _.without(\r\n          getAllCells(state$.value, value, 2),\r\n          ...getMarkedCells(state$.value, 'corner', value)\r\n        )\r\n        const actions = [\r\n          clearSelected(),\r\n          ...(value !== undefined ? _.map(toSelect, (index) => setCorner(index, value)) : [])\r\n        ]\r\n        return actions\r\n      })\r\n    ),\r\n\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(UPDATE_VALUES),\r\n      map(({ value }) => ({\r\n        mode: getPencilMode(state$.value),\r\n        value\r\n      })),\r\n      filter(({ mode }) => mode !== 'show' && mode !== 'find' && mode !== 'pairs'),\r\n      map(({ mode, value }) => ({\r\n        selected: getSelected(state$.value),\r\n        mode,\r\n        value\r\n      })),\r\n      mergeMap(({ selected, mode, value }) => {\r\n        switch (mode) {\r\n          case 'normal':\r\n            return _.map(Object.keys(selected), (index) => setValue(index, value))\r\n          case 'corner':\r\n            return _.map(Object.keys(selected), (index) => setCorner(index, value))\r\n          case 'center':\r\n            return _.map(Object.keys(selected), (index) => setCenter(index, value))\r\n          case 'color':\r\n            return _.map(Object.keys(selected), (index) => setColor(index, value))\r\n          default:\r\n            return\r\n        }\r\n      })\r\n    )\r\n)\r\n\r\n// reducer\r\nconst setPencilMarks = (state, mode, index, value, action) => {\r\n  const set =\r\n    action === 'set'\r\n      ? true\r\n      : action === 'clear'\r\n      ? false\r\n      : _.indexOf(state[index][mode], value) === -1\r\n  return {\r\n    ...state,\r\n    [index]: {\r\n      ...state[index],\r\n      [mode]: state[index][mode]\r\n        ? set\r\n          ? _.chain([...state[index][mode], value])\r\n              .first(8)\r\n              .sort()\r\n              .value()\r\n          : _.without(state[index][mode], value)\r\n        : [value]\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {}\r\nexport const reducer = (state = initialState, { type, index, value, values, action }) => {\r\n  switch (type) {\r\n    case LOAD_SUDOKU: {\r\n      return _.object(\r\n        _.range(values.length),\r\n        _.map(values, (given, index) => ({ index, given }))\r\n      )\r\n    }\r\n    case SET_VALUE: {\r\n      return { ...state, [index]: { ...state[index], value } }\r\n    }\r\n    case SET_CORNER: {\r\n      return value !== undefined\r\n        ? setPencilMarks(state, 'corner', index, value)\r\n        : { ...state, [index]: { ...state[index], corner: value } }\r\n    }\r\n    case SET_CENTER: {\r\n      return value !== undefined\r\n        ? setPencilMarks(state, 'center', index, value, action)\r\n        : { ...state, [index]: { ...state[index], center: value } }\r\n    }\r\n    case SET_COLOR: {\r\n      return { ...state, [index]: { ...state[index], color: value } }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// cell utilities\r\nconst boxStarts = [0, 3, 6, 27, 30, 33, 54, 57, 60]\r\n\r\nconst isColumn = (pair) => getColumn(pair[0]) === getColumn(pair[1])\r\nconst isRow = (pair) => getRow(pair[0]) === getRow(pair[1])\r\nconst isBox = (pair) => getBox(pair[0]) === getBox(pair[1])\r\n\r\nexport const getColumn = (cellid) => cellid % 9\r\nexport const getRow = (cellid) => Math.floor(cellid / 9)\r\nexport const getBox = (cellid) => Math.floor(cellid / 27) * 3 + Math.floor(getColumn(cellid) / 3)\r\n\r\nconst getColumnIndexes = (column) => _.range(column, 81 + column, 9)\r\nconst getRowIndexes = (row) => _.range(row * 9, row * 9 + 9)\r\nconst getBoxIndexes = (boxid) =>\r\n  _.chain(_.range(boxStarts[boxid], boxStarts[boxid] + 3))\r\n    .map((i) => [i, i + 9, i + 18])\r\n    .flatten()\r\n    .value()\r\n\r\nconst getMarkedCells = (state, mode, value) =>\r\n  _.chain(_.range(0, 81))\r\n    .map((id) => getCellData(state, id))\r\n    .filter((data) => _.contains(data[mode], value))\r\n    .map((data) => data.index)\r\n    .value()\r\n\r\nconst getPossibleCells = (state, box, value) => {\r\n  const boxIndexes = getBoxIndexes(box)\r\n  if (_.filter(boxIndexes, (id) => getCellValue(state, id) === value).length === 0) {\r\n    return _.chain(boxIndexes)\r\n      .filter((id) => {\r\n        const value = getCellValue(state, id)\r\n        return value === 0 || value === undefined\r\n      })\r\n      .filter((id) => {\r\n        const values = _.chain(_.union(getRowIndexes(getRow(id)), getColumnIndexes(getColumn(id))))\r\n          .map((id) => getCellValue(state, id) === value)\r\n          .value()\r\n        return !_.contains(values, true)\r\n      })\r\n      .value()\r\n  }\r\n  return []\r\n}\r\nexport const getAffectedCells = (state, index, value) => {\r\n  return _.chain([\r\n    ...getColumnIndexes(getColumn(index)),\r\n    ...getRowIndexes(getRow(index)),\r\n    ...getBoxIndexes(getBox(index))\r\n  ])\r\n    .unique()\r\n    .without(index)\r\n    .filter((index) => {\r\n      const data = getCellData(state, index)\r\n      return data.center && _.contains(data.center, value)\r\n    })\r\n    .value()\r\n}\r\nexport const getAffectedPairCells = (state, pair, value) => {\r\n  return _.chain([\r\n    ...(isColumn(pair) ? getColumnIndexes(getColumn(pair[0])) : []),\r\n    ...(isRow(pair) ? getRowIndexes(getRow(pair[0])) : []),\r\n    ...(isBox(pair) ? getBoxIndexes(getBox(pair[0])) : [])\r\n  ])\r\n    .unique()\r\n    .without(pair[0], pair[1])\r\n    .tap((result) =>\r\n      pair[0] === 7 && pair[1] === 8\r\n        ? console.log(' *** result1:', pair, value, result, getCellData(state, 0))\r\n        : ''\r\n    )\r\n    .filter((index) => {\r\n      const data = getCellData(state, index)\r\n      return data.given || data.value ? false : data.center && _.contains(data.center, value)\r\n    })\r\n    .tap((result) =>\r\n      pair[0] === 7 && pair[1] === 8 ? console.log(' *** result2:', pair, value, result) : ''\r\n    )\r\n    .value()\r\n}\r\nexport const getAllCells = (state, value, limit) =>\r\n  _.chain(_.range(0, 9))\r\n    .map((box) => getPossibleCells(state, box, value))\r\n    .filter((ids) => (limit ? ids.length <= limit : true))\r\n    .flatten()\r\n    .unique()\r\n    .value()\r\n\r\nconst getCenters = (state, index) => {\r\n  return !state.sudoku[index].given && !state.sudoku[index].value\r\n    ? state.sudoku[index].center\r\n      ? state.sudoku[index].center\r\n      : []\r\n    : []\r\n}\r\n\r\nexport const findNakedSingles = (state) =>\r\n  _.chain(_.range(81))\r\n    .filter((index) => getCenters(state, index).length === 1)\r\n    .map((index) => ({ index, value: getCenters(state, index)[0] }))\r\n    .value()\r\n\r\nexport const checkMethods = { box: getBoxIndexes, row: getRowIndexes, column: getColumnIndexes }\r\nexport const indexMethods = { box: getBox, row: getRow, column: getColumn }\r\nexport const findHiddenSingles = (state, check) =>\r\n  _.chain(_.range(0, 9))\r\n    .map((id) => {\r\n      const indexes = checkMethods[check](id)\r\n      const results = _.chain(_.range(1, 10))\r\n        .map((value) => ({\r\n          value,\r\n          indexes: _.filter(indexes, (index) => _.contains(getCenters(state, index), value))\r\n        }))\r\n        .filter((list) => {\r\n          return list.indexes.length === 1\r\n        })\r\n        .value()\r\n      return _.map(results, (result) => ({\r\n        type: check,\r\n        id,\r\n        value: result.value,\r\n        index: result.indexes[0]\r\n      }))\r\n    })\r\n    .filter((list) => list.length > 0)\r\n    .flatten()\r\n    .value()\r\n\r\nexport const findNakedPairs = (state, check) =>\r\n  _.chain(_.range(0, 9))\r\n    .map((id) => {\r\n      const indexes = checkMethods[check](id)\r\n      return _.chain(indexes)\r\n        .map((index) => ({\r\n          index,\r\n          values: getCenters(state, index)\r\n        }))\r\n        .filter((list) => list.values.length === 2)\r\n        .groupBy((list) => list.values)\r\n        .map((group) => ({\r\n          type: check,\r\n          id,\r\n          values: group[0].values,\r\n          indexes: _.map(group, (p) => p.index)\r\n        }))\r\n        .filter((pair) => pair.values.length === 2 && pair.indexes.length === 2)\r\n        .value()\r\n    })\r\n    .filter((list) => list.length > 0)\r\n    .flatten()\r\n    .value()\r\n\r\nexport const findPointingPairs = (state, check) =>\r\n  _.chain(_.range(0, 9))\r\n    .map((id) => {\r\n      const indexes = checkMethods[check](id)\r\n      const result = _.chain(_.range(1, 10))\r\n        .reduce((acc, value) => {\r\n          const byValue = _.filter(indexes, (index) => _.contains(getCenters(state, index), value))\r\n          return byValue.length === 2 ? [...acc, { value, indexes: byValue }] : acc\r\n        }, [])\r\n        .value()\r\n      return result\r\n    })\r\n    .flatten()\r\n    .filter((pair) => {\r\n      return isColumn(pair.indexes) || isRow(pair.indexes)\r\n    })\r\n    .value()\r\n\r\nexport const findInvalidValues = (state) => {\r\n  const missing = _.filter(_.range(0, 81), (index) => {\r\n    const data = getCellData(state, index)\r\n    return !data.given && !data.value\r\n  })\r\n  const invalid = _.chain(['box', 'column', 'row'])\r\n    .map((check) =>\r\n      _.map(_.range(0, 9), (id) =>\r\n        _.chain(checkMethods[check](id))\r\n          .map((index) => {\r\n            const data = getCellData(state, index)\r\n            return { index, value: data.given || data.value }\r\n          })\r\n          .filter((value) => value.value)\r\n          .groupBy((value) => value.value)\r\n          .filter((value) => value.length > 1)\r\n          .map((values) => _.map(values, (value) => value.index))\r\n          .value()\r\n      )\r\n    )\r\n    .flatten()\r\n    .unique()\r\n    .value()\r\n  return { missing, invalid }\r\n}\r\n\r\n// .map((type) =>\r\n//   _.chain(_.range(0, 9))\r\n//     .map((id) => checkMethods[type](id))\r\n//     .map((indexes) => {\r\n//       const data = getCellData(state, indexes[0])\r\n//       return { missing: _.filter(indexes, (cell) => !cell.given && !cell.value), invalid: {} }\r\n//     })\r\n//     .value()\r\n// )\r\n// .value()\r\n\r\nexport default reducer\r\n","import { useSelector } from 'react-redux'\r\nimport { getCellData } from 'store/sudoku'\r\nimport { isCellSelected, getCellColor } from 'store/ui'\r\nimport _ from 'underscore'\r\n\r\nconst SudokuCell = ({ id }) => {\r\n  const data = useSelector((state) => getCellData(state, id))\r\n  const selected = useSelector((state) => isCellSelected(state, id))\r\n  const classNames = `sudoku-cell ${boxPosition[id]}`\r\n  const value = data.given || data.value\r\n  const cornerSpans = _.map(data.corner, (value, i) => (\r\n    <span key={`${id}-${i}`} className={`sudoku-corner ${cornerClass[i]}`}>\r\n      {value}\r\n    </span>\r\n  ))\r\n  const centerSpan = data.center && (\r\n    <span key={`${id}-center`} className=\"sudoku-center\">\r\n      {_.reduce(data.center, (value, id) => `${value}${id}`, '')}\r\n    </span>\r\n  )\r\n\r\n  const pencilMarks = [...cornerSpans, centerSpan]\r\n  const backgroundColor = getCellColor(data.color, selected)\r\n  return (\r\n    <div className={classNames} id={id} style={{ backgroundColor }}>\r\n      {value !== 0 && (\r\n        <div className=\"sudoku-value\" style={data.given ? { color: '#040404' } : {}}>\r\n          {value ? value : pencilMarks && pencilMarks.length > 0 ? pencilMarks : ''}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nconst cornerClass = [\r\n  'corner-ul',\r\n  'corner-top',\r\n  'corner-ur',\r\n  'corner-r',\r\n  'corner-lr',\r\n  'corner-bottom',\r\n  'corner-ll',\r\n  'corner-l'\r\n]\r\nconst boxPosition = [\r\n  ...['tl', 'tc', 'tr', 'tl', 'tc', 'tr', 'tl', 'tc', 'tr'],\r\n  ...['cl', 'cc', 'cr', 'cl', 'cc', 'cr', 'cl', 'cc', 'cr'],\r\n  ...['bl', 'bc', 'br', 'bl', 'bc', 'br', 'bl', 'bc', 'br'],\r\n  ...['tl', 'tc', 'tr', 'tl', 'tc', 'tr', 'tl', 'tc', 'tr'],\r\n  ...['cl', 'cc', 'cr', 'cl', 'cc', 'cr', 'cl', 'cc', 'cr'],\r\n  ...['bl', 'bc', 'br', 'bl', 'bc', 'br', 'bl', 'bc', 'br'],\r\n  ...['tl', 'tc', 'tr', 'tl', 'tc', 'tr', 'tl', 'tc', 'tr'],\r\n  ...['cl', 'cc', 'cr', 'cl', 'cc', 'cr', 'cl', 'cc', 'cr'],\r\n  ...['bl', 'bc', 'br', 'bl', 'bc', 'br', 'bl', 'bc', 'br']\r\n]\r\n\r\nexport default SudokuCell\r\n","import { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport _ from 'underscore'\r\nimport SudokuCell from './SudokuCell'\r\nimport { setSelectionMode, getSelected, clearSelected, selectCell, isSelecting } from 'store/ui'\r\n\r\nimport './sudoku.css'\r\n\r\nconst SudokuRow = ({ row }) => {\r\n  return (\r\n    <div className=\"sudoku-row\">\r\n      {_.map(_.range(0, 9), (index) => {\r\n        const id = row * 9 + index\r\n        return <SudokuCell key={id} id={id} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SudokuGrid = () => {\r\n  const dispatch = useDispatch()\r\n  const divRef = useRef()\r\n  const selected = useSelector((state) => getSelected(state))\r\n  const selecting = useSelector((state) => isSelecting(state))\r\n\r\n  const handleEvent = (event) => {\r\n    const clientRect = divRef.current.getBoundingClientRect()\r\n    const gridSize = clientRect.width / 9\r\n    const cellIndex =\r\n      Math.trunc((event.clientY - clientRect.y) / gridSize) * 9 +\r\n      Math.trunc((event.clientX - clientRect.x) / gridSize)\r\n    switch (event.type) {\r\n      case 'mousedown':\r\n        if (!event.shiftKey) {\r\n          dispatch(clearSelected())\r\n        }\r\n        dispatch(setSelectionMode(true))\r\n        dispatch(selectCell(cellIndex))\r\n        break\r\n      case 'mouseup':\r\n        dispatch(setSelectionMode(false))\r\n        break\r\n      case 'mouseover':\r\n        if (selecting && !selected[cellIndex]) {\r\n          dispatch(selectCell(cellIndex))\r\n        }\r\n        break\r\n      default: {\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"sudoku-grid\"\r\n      ref={divRef}\r\n      onMouseDown={handleEvent}\r\n      onMouseOver={handleEvent}\r\n      onMouseUp={handleEvent}\r\n    >\r\n      {_.range(0, 9).map((row, index) => (\r\n        <SudokuRow key={`row-${index}`} row={row} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SudokuGrid\r\n","import SudokuGrid from './SudokuGrid'\r\n\r\nexport default SudokuGrid\r\n","import Button from './Button'\r\n\r\nexport default Button\r\n","import classNames from 'classnames'\r\n\r\nimport './Button.css'\r\n\r\nexport const Button = ({ className = '', style = {}, label, onClick, value, toggle = false }) => {\r\n  const buttonClassNames = toggle\r\n    ? classNames(`button ${className}`, { 'button-on': value })\r\n    : `button ${className}`\r\n  return (\r\n    <button\r\n      key={`${label}-button`}\r\n      className={buttonClassNames}\r\n      style={style}\r\n      type=\"button\"\r\n      onClick={(event) => onClick(event)}\r\n    >\r\n      {label}\r\n    </button>\r\n  )\r\n}\r\nexport default Button\r\n","import { combineEpics, ofType } from 'redux-observable'\r\nimport { from, timer } from 'rxjs'\r\nimport { map, tap, filter, mergeMap, concatMap, startWith, ignoreElements } from 'rxjs/operators'\r\nimport _ from 'underscore'\r\nimport {\r\n  getAllCells,\r\n  setValue,\r\n  setCenter,\r\n  getRow,\r\n  getColumn,\r\n  getAffectedCells,\r\n  getAffectedPairCells,\r\n  findNakedSingles,\r\n  findHiddenSingles,\r\n  findNakedPairs,\r\n  findPointingPairs,\r\n  indexMethods,\r\n  getUnresolvedCells,\r\n  findInvalidValues\r\n} from './sudoku'\r\nimport { clearSelected } from 'store/ui'\r\n\r\n// constants\r\nconst START = 'solve/START'\r\n// const SINGLES = 'solve/SINGLES'\r\nconst NAKED_SINGLES = 'solve/NAKED_SINGLES'\r\nconst HIDDEN_SINGLES = 'solve/HIDDEN_SINGLES'\r\n// const PAIRS = 'solve/PAIRS'\r\nconst NAKED_PAIRS = 'solve/NAKED_PAIRS'\r\nconst POINTING_PAIRS = 'solve/POINTING_PAIRS'\r\nconst ADD_STEPS = 'solve/ADD_STEPS'\r\nconst APPLY_STEPS = 'solve/APPLY_STEPS'\r\nconst REVERSE_STEP = 'solve/REVERSE_STEP'\r\nconst CHECK_VALUES = 'solve/CHECK_VALUES'\r\nconst ADD_ACTIONS = 'solve/ADD_ACTION'\r\nconst NEXT_ACTION = 'solve/NEXT_ACTION'\r\nconst REMOVE_ACTION = 'solve/REMOVE_ACTION'\r\nconst CLEAR_ACTIONS = 'solve/CLEAR_ACTIONS'\r\nconst MORE_ACTIONS = 'solve/MORE_ACTIONS'\r\nconst LAST_ACTION = 'solve/LAST_ACTION'\r\nconst UNABLE_TO_SOLVE = 'solve/UNABLE_TO_SOLVE'\r\n\r\n// actions\r\nconst addSteps = (steps) => ({ type: ADD_STEPS, steps })\r\nconst applySteps = (steps) => ({ type: APPLY_STEPS, steps })\r\nconst removeAction = () => ({ type: REMOVE_ACTION })\r\nconst nextAction = () => ({ type: NEXT_ACTION })\r\nconst addActions = (actions) => ({ type: ADD_ACTIONS, actions })\r\nconst setLastAction = (action) => ({ type: LAST_ACTION, action })\r\n\r\n// selectors\r\nexport const getSolveActions = (state) => state.solve.buttons\r\nexport const getSteps = (state) => state.solve.steps\r\nexport const getNextAction = (state) => _.first(state.solve.actions)\r\n\r\nconst getCellName = (index) => `R${getRow(index) + 1}C${getColumn(index) + 1}`\r\nconst getPairCellName = (indexes) => `${getCellName(indexes[0])} & ${getCellName(indexes[1])}`\r\nconst getStep = (state$, method, index, value) => ({\r\n  type: 'single',\r\n  method,\r\n  index,\r\n  value,\r\n  cellName: getCellName(index)\r\n})\r\n\r\nconst getPairStep = (state$, method, indexes, values) => ({\r\n  type: 'pair',\r\n  method,\r\n  indexes,\r\n  values,\r\n  cellName: getPairCellName(indexes)\r\n})\r\n\r\nconst alreadyFound = (state, cellName) => {\r\n  const index = _.findIndex(state.solve.steps, (step) => step.cellName === cellName)\r\n  return index !== -1\r\n}\r\n\r\n// epics\r\nconst actions = [\r\n  { type: NAKED_SINGLES },\r\n  { type: HIDDEN_SINGLES, check: 'box' },\r\n  { type: HIDDEN_SINGLES, check: 'row' },\r\n  { type: HIDDEN_SINGLES, check: 'column' },\r\n  { type: NAKED_PAIRS, check: 'box' },\r\n  { type: NAKED_PAIRS, check: 'row' },\r\n  { type: NAKED_PAIRS, check: 'column' },\r\n  { type: POINTING_PAIRS, check: 'box' },\r\n  { type: POINTING_PAIRS, check: 'row' },\r\n  { type: POINTING_PAIRS, check: 'column' },\r\n  { type: UNABLE_TO_SOLVE }\r\n]\r\nexport const epics = combineEpics(\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(START),\r\n      map(() => clearSelected())\r\n    ),\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(START),\r\n      map(() =>\r\n        _.range(1, 10).map((value) => ({ value, cells: getAllCells(state$.value, value) }))\r\n      ),\r\n      mergeMap((allCells) =>\r\n        from([\r\n          ..._.flatten(\r\n            allCells.map(({ value, cells }) => cells.map((cell) => setCenter(cell, value)))\r\n          ),\r\n          { type: MORE_ACTIONS }\r\n        ])\r\n      )\r\n    ),\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(CHECK_VALUES),\r\n      map(() => findInvalidValues(state$.value)),\r\n      map((results) => {\r\n        return results.missing.length === 0 && results.invalid.length === 0\r\n          ? 'Looks good to me!'\r\n          : `Unresolved cells: ${results.missing.length}\\nBroken cells: ${_.map(\r\n              results.invalid,\r\n              (cell) => getCellName(cell)\r\n            )}`\r\n      }),\r\n      tap((message) => alert(message)),\r\n      ignoreElements()\r\n    ),\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(NAKED_SINGLES),\r\n      map(() =>\r\n        _.map(findNakedSingles(state$.value), (single) =>\r\n          getStep(state$, 'Naked single', single.index, single.value)\r\n        )\r\n      ),\r\n      filter((steps) => steps.length > 0),\r\n      map((steps) =>\r\n        _.map(steps, (step) => ({\r\n          ...step,\r\n          affected: { [step.value]: getAffectedCells(state$.value, step.index, step.value) }\r\n        }))\r\n      ),\r\n      mergeMap((steps) => from([addSteps(steps), applySteps(steps)]))\r\n    ),\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(HIDDEN_SINGLES),\r\n      map(({ check }) => {\r\n        const raw = findHiddenSingles(state$.value, check)\r\n        const singles = _.filter(\r\n          raw,\r\n          ({ index }) => !alreadyFound(state$.value, getCellName(index))\r\n        )\r\n        const steps = _.map(singles, ({ type, id, index, value }) =>\r\n          getStep(state$, `Hidden single in ${type} ${id + 1}`, index, value)\r\n        )\r\n        return steps\r\n      }),\r\n      map((steps) =>\r\n        _.map(steps, (step) => ({\r\n          ...step,\r\n          affected: { [step.value]: getAffectedCells(state$.value, step.index, step.value) }\r\n        }))\r\n      ),\r\n      mergeMap((steps) => from([addSteps(steps), applySteps(steps)]))\r\n    ),\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(NAKED_PAIRS),\r\n      map(({ check }) => {\r\n        const raw = findNakedPairs(state$.value, check)\r\n        const pairs = _.filter(\r\n          raw,\r\n          ({ indexes }) => !alreadyFound(state$.value, getPairCellName(indexes))\r\n        )\r\n        const steps = _.map(pairs, ({ type, id, indexes, values }) =>\r\n          getPairStep(state$, `Naked pair in ${type} ${id + 1}`, indexes, values)\r\n        )\r\n        return steps\r\n      }),\r\n      map((steps) =>\r\n        _.map(steps, (step) => ({\r\n          ...step,\r\n          affected: {\r\n            [step.values[0]]: getAffectedPairCells(state$.value, step.indexes, step.values[0]),\r\n            [step.values[1]]: getAffectedPairCells(state$.value, step.indexes, step.values[1])\r\n          }\r\n        }))\r\n      ),\r\n      mergeMap((steps) => from([addSteps(steps), applySteps(steps)]))\r\n    ),\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(POINTING_PAIRS),\r\n      map(({ check }) => {\r\n        const raw = findPointingPairs(state$.value, 'box')\r\n        const pairs = _.filter(\r\n          raw,\r\n          ({ indexes }) => !alreadyFound(state$.value, getPairCellName(indexes))\r\n        )\r\n        const steps = _.map(pairs, ({ indexes, value }) =>\r\n          getPairStep(\r\n            state$,\r\n            `Pointing pair in ${check} ${indexMethods[check](indexes[0]) + 1}`,\r\n            indexes,\r\n            [value]\r\n          )\r\n        )\r\n        return steps\r\n      }),\r\n      map((steps) =>\r\n        _.chain(steps)\r\n          .map((step) => ({\r\n            ...step,\r\n            affected: {\r\n              [step.values[0]]: getAffectedPairCells(state$.value, step.indexes, step.values[0])\r\n            }\r\n          }))\r\n          .filter((step) =>\r\n            _.every(_.map(step.values, (value) => step.affected[value].length !== 0))\r\n          )\r\n          .value()\r\n      ),\r\n      mergeMap((steps) => from([addSteps(steps), applySteps(steps)]))\r\n    ),\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(APPLY_STEPS),\r\n      mergeMap(({ steps }) =>\r\n        _.chain(steps)\r\n          .map((step) => [\r\n            setValue(step.index, step.value),\r\n            ..._.map(step.affected, (affected, value) =>\r\n              _.map(affected, (index) => setCenter(index, +value, 'clear'))\r\n            )\r\n          ])\r\n          .flatten()\r\n          .value()\r\n      )\r\n    ),\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(REVERSE_STEP),\r\n      mergeMap(() => {\r\n        const step = _.last(state$.value.solve.steps)\r\n        const actions = [\r\n          setValue(step.index, undefined),\r\n          ..._.map(step.data, (value) => setCenter(step.index, value)),\r\n          ..._.map(step.affected, (index) => setCenter(index, step.value, 'set'))\r\n        ]\r\n        return from(actions)\r\n      })\r\n    ),\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(NEXT_ACTION),\r\n      map(() => getNextAction(state$.value)),\r\n      filter((action) => !!action),\r\n      concatMap((value) => timer(5).pipe(ignoreElements(), startWith(value))),\r\n      mergeMap((action) => from([removeAction(), action, nextAction()]))\r\n    ),\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(MORE_ACTIONS),\r\n      map(() => {\r\n        const unresolved = getUnresolvedCells(state$.value).length\r\n        const nextAction =\r\n          state$.value.solve.lastAction.unresolved !== unresolved ||\r\n          state$.value.solve.lastAction.id === actions.length - 1\r\n            ? 0\r\n            : ++state$.value.solve.lastAction.id\r\n        return { unresolved, nextAction }\r\n      }),\r\n      mergeMap(({ unresolved, nextAction }) =>\r\n        unresolved === 0 || nextAction.id === 8\r\n          ? from([\r\n              { type: CLEAR_ACTIONS },\r\n              { type: ADD_STEPS, steps: [{ type: 'solved', cellName: 'Solved' }] }\r\n            ])\r\n          : from([\r\n              setLastAction({ ...actions[nextAction], unresolved, id: nextAction }),\r\n              addActions([actions[nextAction], { type: MORE_ACTIONS }]),\r\n              { type: NEXT_ACTION }\r\n            ])\r\n      )\r\n    )\r\n)\r\n\r\n// reducer\r\nconst initialState = {\r\n  buttons: [\r\n    { name: 'Solve', action: { type: START } },\r\n    { name: 'Check', action: { type: CHECK_VALUES } }\r\n  ],\r\n  actions: [],\r\n  steps: [],\r\n  lastAction: { type: 'start', unresolved: 81, id: -1 }\r\n}\r\n\r\nexport const reducer = (state = initialState, { type, steps, actions, action }) => {\r\n  switch (type) {\r\n    case ADD_ACTIONS: {\r\n      return {\r\n        ...state,\r\n        actions: _.unique([...state.actions, ...actions], false, (a) => a.type + a.check)\r\n      }\r\n    }\r\n    case REMOVE_ACTION: {\r\n      return { ...state, actions: _.rest(state.actions, 1) }\r\n    }\r\n    case CLEAR_ACTIONS: {\r\n      return { ...state, actions: [] }\r\n    }\r\n    case ADD_STEPS: {\r\n      return { ...state, steps: [...state.steps, ...steps] }\r\n    }\r\n    case LAST_ACTION: {\r\n      return { ...state, lastAction: action }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import ActionBar from './ActionBar'\r\n\r\nexport default ActionBar\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport Button from 'components/Button'\r\nimport { getSolveActions } from 'store/solve'\r\n\r\nimport './ActionBar.css'\r\n\r\nconst ActionBar = () => {\r\n  const dispatch = useDispatch()\r\n  const actions = useSelector((state) => getSolveActions(state))\r\n\r\n  return (\r\n    <div className=\"action-bar\">\r\n      {actions.map(({ name, action }) => (\r\n        <Button\r\n          key={name}\r\n          label={name}\r\n          onClick={() => {\r\n            dispatch(action)\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\nexport default ActionBar\r\n","import NumberBar from './NumberBar'\r\n\r\nexport default NumberBar\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport Button from 'components/Button'\r\nimport { updateValues } from 'store/sudoku'\r\nimport { getPencilMode, colors } from 'store/ui'\r\n\r\nimport './NumberBar.css'\r\nimport _ from 'underscore'\r\nconst NumberBar = () => {\r\n  const dispatch = useDispatch()\r\n  const mode = useSelector((state) => getPencilMode(state))\r\n  const handleClick = (value) => {\r\n    dispatch(updateValues(value))\r\n  }\r\n  return (\r\n    <div className=\"number-bar\">\r\n      {_.map(_.range(1, 10), (index) => {\r\n        const colorStyle = { backgroundColor: colors[index - 1] }\r\n        return (\r\n          <Button\r\n            key={index}\r\n            className={'number'}\r\n            style={mode === 'color' ? colorStyle : {}}\r\n            label={mode !== 'color' && <span className={`number-${mode}`}>{index}</span>}\r\n            onClick={(event) => handleClick(index)}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NumberBar\r\n","import ButtonGroup from './ButtonGroup'\r\n\r\nexport default ButtonGroup\r\n","import Button from 'components/Button'\r\nimport _ from 'underscore'\r\n\r\nconst ButtonGroup = ({ buttonState, onClick }) => {\r\n  const clickHandler = (label) => {\r\n    const newState = _.reduce(\r\n      Object.keys(buttonState),\r\n      (state, button) => ({ ...state, [button]: button === label }),\r\n      {}\r\n    )\r\n    onClick(newState)\r\n  }\r\n  return _.map(Object.keys(buttonState), (label) => (\r\n    <Button\r\n      key={`gb-${label}`}\r\n      label={label}\r\n      toggle={true}\r\n      value={buttonState[label]}\r\n      onClick={() => clickHandler(label)}\r\n    />\r\n  ))\r\n}\r\n\r\nexport default ButtonGroup\r\n","import ButtonBar from './ButtonBar'\r\n\r\nexport default ButtonBar\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport ButtonGroup from 'components/ButtonGroup'\r\nimport { getPencilModes, setPencilMode } from 'store/ui'\r\nimport './ButtonBar.css'\r\n\r\nconst ButtonBar = () => {\r\n  const dispatch = useDispatch()\r\n  const modes = useSelector((state) => getPencilModes(state))\r\n\r\n  const groupHandler = (newState) => dispatch(setPencilMode(newState))\r\n\r\n  return (\r\n    <>\r\n      <div className=\"button-bar\">\r\n        <ButtonGroup buttonState={modes} onClick={groupHandler} />\r\n        {/* <VerticalDivider /> */}\r\n        {/* <Button label=\"clear\" onClick={() => dispatch(updateValues(undefined))} /> */}\r\n        {/* <Button label=\"redo\" onClick={() => {}} /> */}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default ButtonBar\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { getSteps } from 'store/solve'\r\n\r\nimport './StepList.css'\r\nconst getPairAffected = (step) =>\r\n  step.values[1] ? `(${step.values[0]},${step.values[1]})` : `(${step.values[0]})`\r\nconst getStepName = (step) => {\r\n  return step.type === 'solved'\r\n    ? step.cellName\r\n    : step.type === 'single'\r\n    ? `${step.method}: ${step.cellName} → ${step.value}`\r\n    : `${step.method}: ${step.cellName} ${getPairAffected(step)}`\r\n}\r\n\r\nconst StepList = () => {\r\n  const steps = useSelector((state) => getSteps(state))\r\n  return (\r\n    <div className=\"step-list\">\r\n      {steps.map((step, key) => {\r\n        return <div key={key}>{`${key}: ${getStepName(step)}`}</div>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StepList\r\n","import StepList from './StepList'\r\n\r\nexport default StepList\r\n","import App from './App'\r\n\r\nexport default App\r\n","import { useDispatch } from 'react-redux'\nimport SudokuGrid from 'components/SudokuGrid'\nimport { updateValues } from 'store/sudoku'\nimport './App.css'\nimport ActionBar from 'components/ActionBar'\nimport NumberBar from 'components/NumberBar'\nimport ButtonBar from 'components/ButtonBar'\nimport StepList from 'components/StepList'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const handleKeyDown = (e) => {\n    if (e.key >= 0 && e.key <= 9) {\n      dispatch(updateValues(+e.key))\n    }\n  }\n\n  return (\n    <div className=\"App\" onKeyDown={handleKeyDown} tabIndex={0}>\n      <header className=\"App-header\">\n        <div className=\"App-container\">\n          <div className=\"display-container\">\n            <NumberBar />\n            <SudokuGrid />\n            <ButtonBar />\n          </div>\n          <ActionBar />\n          <StepList />\n        </div>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","import { combineEpics } from 'redux-observable'\r\n\r\n// constants\r\nconst TOGGLE_ON = 'toggle/TOGGLE_ON'\r\n\r\n// actions\r\nexport const toggleOn = (name) => ({ type: TOGGLE_ON, name })\r\n\r\n// selectors\r\nexport const getToggleNames = (state) => Object.keys(state.toggle)\r\nexport const getSettings = (state, name) => state.toggle[name]\r\n\r\n// epics\r\nexport const epics = combineEpics()\r\n\r\n// reducer\r\nconst initialState = {\r\n  corner: { title: 'Corners', on: false },\r\n  center: { title: 'Center', on: false }\r\n}\r\nexport const reducer = (state = initialState, { type, name }) => {\r\n  switch (type) {\r\n    case TOGGLE_ON:\r\n      return { ...state, [name]: { ...state[name], on: !state[name].on } }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { combineReducers } from 'redux'\r\nimport { combineEpics } from 'redux-observable'\r\nimport ui, { epics as uiEpics } from './ui'\r\nimport sudoku, { epics as sudokuEpics } from './sudoku'\r\nimport toggle, { epics as toggleEpics } from './toggle'\r\nimport solve, { epics as solveEpics } from './solve'\r\n\r\nexport const rootEpic = combineEpics(uiEpics, sudokuEpics, toggleEpics, solveEpics)\r\nconst appReducer = combineReducers({ ui, sudoku, toggle, solve })\r\n\r\nexport const rootReducer = (state, action) => {\r\n  if (action.type === 'RESET') {\r\n    state = undefined\r\n  }\r\n  return appReducer(state, action)\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { createEpicMiddleware } from 'redux-observable'\r\nimport { rootReducer, rootEpic } from './root'\r\n\r\nconst configureStore = (initialState) => {\r\n  const epicMiddleware = createEpicMiddleware({ dependencies: {} })\r\n  const composeEnhancers =\r\n    (process.env.NODE_ENV !== 'production' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(epicMiddleware))\r\n  )\r\n  epicMiddleware.run(rootEpic)\r\n  return store\r\n}\r\n\r\nexport default configureStore\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport App from 'components/App'\nimport configureStore from 'store/configureStore'\nimport { LOAD_SUDOKU } from 'store/sudoku'\n\nimport './index.css'\n\nconst initialState = window.___INITIAL_STATE___\nconst store = configureStore(initialState)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n// const testSudoku = [\n//   ...[0, 7, 0, 0, 0, 4, 0, 0, 2],\n//   ...[0, 0, 1, 0, 3, 0, 0, 4, 0],\n//   ...[0, 0, 0, 5, 0, 0, 1, 0, 0],\n//   ...[0, 4, 0, 0, 0, 3, 0, 0, 8],\n//   ...[0, 0, 3, 0, 0, 0, 7, 0, 0],\n//   ...[1, 0, 0, 6, 0, 0, 0, 9, 0],\n//   ...[0, 0, 4, 0, 0, 1, 0, 0, 0],\n//   ...[0, 2, 0, 0, 7, 0, 8, 0, 0],\n//   ...[5, 0, 0, 9, 0, 0, 0, 6, 0]\n// ]\nconst testSudoku = [\n  ...[0, 7, 2, 0, 0, 9, 0, 0, 0],\n  ...[0, 3, 0, 6, 0, 0, 4, 0, 0],\n  ...[0, 0, 1, 0, 0, 0, 0, 8, 7],\n  ...[1, 0, 0, 0, 0, 0, 7, 0, 0],\n  ...[9, 0, 0, 2, 0, 3, 0, 0, 0],\n  ...[0, 0, 0, 0, 0, 0, 0, 0, 6],\n  ...[0, 0, 0, 3, 0, 0, 5, 6, 0],\n  ...[0, 0, 0, 0, 0, 4, 9, 0, 0],\n  ...[0, 0, 0, 0, 1, 8, 0, 0, 2]\n]\n// const testSudoku = [\n//   ...[0, 0, 0, 0, 0, 0, 0, 0, 0],\n//   ...[0, 0, 0, 0, 0, 3, 0, 8, 5],\n//   ...[0, 0, 1, 0, 2, 0, 0, 0, 0],\n//   ...[0, 0, 0, 5, 0, 7, 0, 0, 0],\n//   ...[0, 0, 4, 0, 0, 0, 1, 0, 0],\n//   ...[0, 9, 0, 0, 0, 0, 0, 0, 0],\n//   ...[5, 0, 0, 0, 0, 0, 0, 7, 3],\n//   ...[0, 0, 2, 0, 1, 0, 0, 0, 0],\n//   ...[0, 0, 0, 0, 4, 0, 0, 0, 9]\n// ]\nstore.dispatch({ type: LOAD_SUDOKU, values: testSudoku })\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}