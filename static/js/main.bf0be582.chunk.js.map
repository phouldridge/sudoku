{"version":3,"sources":["reportWebVitals.js","store/ui.js","store/sudoku.js","components/SudokuGrid/SudokuCell.js","components/SudokuGrid/SudokuGrid.js","components/SudokuGrid/index.js","components/Button/index.js","components/Button/Button.js","components/NumberBar/index.js","components/NumberBar/NumberBar.js","components/ButtonBar/VerticalDivider.js","components/ButtonGroup/index.js","components/ButtonGroup/ButtonGroup.js","components/ButtonBar/index.js","components/ButtonBar/ButtonBar.js","components/App/index.js","components/App/App.js","store/toggle.js","store/root.js","store/configureStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_SELECTION_MODE","SELECT_CELL","CLEAR_SELECTED","SET_PENCIL_MODE","setSelectionMode","value","type","selectCell","index","getSelected","state","ui","selected","getPencilMode","_","reduce","Object","keys","pencilMode","mode","undefined","colors","epics","combineEpics","initialState","selecting","normal","corner","center","color","reducer","LOAD_SUDOKU","UPDATE_VALUES","SET_VALUE","SET_CORNER","SET_CENTER","SET_COLOR","updateValues","action$","state$","pipe","ofType","map","mergeMap","setValue","setCorner","setCenter","setColor","setPencilMarks","chain","unique","first","values","object","range","length","given","cornerClass","boxPosition","SudokuCell","id","data","useSelector","sudoku","getCellData","isCellSelected","classNames","cornerSpans","i","className","centerSpan","pencilMarks","backgroundColor","colorMark","tinycolor","mix","getCellColor","style","SudokuRow","row","SudokuGrid","dispatch","useDispatch","divRef","useRef","isSelecting","handleEvent","event","clientRect","current","getBoundingClientRect","cellIndex","Math","trunc","clientY","y","clientX","x","shiftKey","ref","onMouseDown","onMouseOver","onMouseUp","Button","lable","onClick","toggle","buttonClassNames","classnames","NumberBar","colorStyle","VerticalDivider","ButtonGroup","buttonState","clickHandler","newState","button","ButtonBar","modes","getPencilModes","App","onKeyDown","e","key","onKeyUp","tabIndex","TOGGLE_ON","title","on","name","rootEpic","uiEpics","sudokuEpics","toggleEpics","appReducer","combineReducers","rootReducer","action","configureStore","epicMiddleware","createEpicMiddleware","dependencies","composeEnhancers","compose","store","createStore","applyMiddleware","run","window","___INITIAL_STATE___","ReactDOM","render","StrictMode","document","getElementById","testSudoku"],"mappings":"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","file":"static/js/main.bf0be582.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineEpics } from 'redux-observable'\r\nimport tinycolor from 'tinycolor2'\r\nimport _ from 'underscore'\r\n\r\n// constants\r\nconst SET_SELECTION_MODE = 'ui/SET_SELECTION_MODE'\r\nconst SELECT_CELL = 'ui/SELECT_CELL'\r\nconst CLEAR_SELECTED = 'ui/CLEAR_SELECTED'\r\nconst SET_PENCIL_MODE = 'ui/SET_PENCIL_MODE'\r\n\r\n// actions\r\nexport const setSelectionMode = (value) => ({ type: SET_SELECTION_MODE, value })\r\nexport const selectCell = (index) => ({ type: SELECT_CELL, index })\r\nexport const clearSelected = () => ({ type: CLEAR_SELECTED })\r\nexport const setPencilMode = (mode) => ({ type: SET_PENCIL_MODE, mode })\r\n\r\n// selector\r\nexport const isSelecting = (state, index) => state.ui.selecting\r\nexport const isCellSelected = (state, index) => state.ui.selected[index]\r\nexport const getSelected = (state) => state.ui.selected\r\nexport const getPencilModes = (state) => state.ui.pencilMode\r\nexport const getPencilMode = (state) => {\r\n  const mode = _.reduce(\r\n    Object.keys(state.ui.pencilMode),\r\n    (mode, index) => (state.ui.pencilMode[index] ? index : mode),\r\n    undefined\r\n  )\r\n  return mode || 'normal'\r\n}\r\n\r\nexport const fromColors = (added, base) => {\r\n  var mix = [0, 0, 0, 0]\r\n  mix[3] = 1 - (1 - added[3]) * (1 - base[3]) // alpha\r\n  mix[0] = Math.round(\r\n    (added[0] * added[3]) / mix[3] + (base[0] * base[3] * (1 - added[3])) / mix[3]\r\n  ) // red\r\n  mix[1] = Math.round(\r\n    (added[1] * added[3]) / mix[3] + (base[1] * base[3] * (1 - added[3])) / mix[3]\r\n  ) // green\r\n  mix[2] = Math.round(\r\n    (added[2] * added[3]) / mix[3] + (base[2] * base[3] * (1 - added[3])) / mix[3]\r\n  ) // blue\r\n}\r\nexport const getCellColor = (colorMark, selected) => {\r\n  return colorMark && selected\r\n    ? tinycolor.mix(colors[colorMark - 1], '#ffffa0')\r\n    : colorMark\r\n    ? colors[colorMark - 1]\r\n    : selected\r\n    ? '#ffffa0'\r\n    : 'snow'\r\n}\r\nexport const colors = [\r\n  '#7FDBFFAA', //aqua\r\n  '#39CCCCAA', //teal\r\n  '#3D9970AA', //olive\r\n  '#FFDC0088', //yellow\r\n  '#FF851BAA', //orange\r\n  '#85144B44', //maroon\r\n  '#B10DC9FF', //purple\r\n  '#DDDDDDFF' //silver\r\n]\r\n\r\n// epics\r\nexport const epics = combineEpics()\r\n\r\n// reducer\r\nconst initialState = {\r\n  selecting: false,\r\n  selected: [],\r\n  pencilMode: { normal: true, corner: false, center: false, color: false }\r\n}\r\nexport const reducer = (state = initialState, { type, value, index, mode }) => {\r\n  switch (type) {\r\n    case SET_SELECTION_MODE:\r\n      return { ...state, selecting: value }\r\n    case CLEAR_SELECTED:\r\n      return { ...state, selected: [] }\r\n    case SELECT_CELL:\r\n      return { ...state, selected: { ...state.selected, [index]: true } }\r\n    case SET_PENCIL_MODE:\r\n      return { ...state, pencilMode: mode }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { combineEpics, ofType } from 'redux-observable'\r\nimport { map, mergeMap } from 'rxjs/operators'\r\nimport _ from 'underscore'\r\nimport { getSelected, getPencilMode } from 'store/ui'\r\n\r\n// constants\r\nexport const LOAD_SUDOKU = 'sudoku/LOAD_SUDOKU'\r\nexport const UPDATE_VALUES = 'sudoku/UPDATE_VALUES'\r\nexport const SET_VALUE = 'sudoku/SET_VALUE'\r\nexport const SET_CORNER = 'sudoku/SET_CORNER'\r\nexport const SET_CENTER = 'sudoku/SET_CENTER'\r\nexport const SET_COLOR = 'sudoku/SET_COLOR'\r\nexport const SET_PENCIL_MARK = 'sudoku/SET_PENCIL_MARK'\r\n\r\n// actions\r\nexport const loadSudoku = (values) => ({ type: LOAD_SUDOKU, values })\r\nexport const updateValues = (value) => ({ type: UPDATE_VALUES, value })\r\nconst setValue = (index, value) => ({ type: SET_VALUE, index, value })\r\nconst setCorner = (index, value) => ({ type: SET_CORNER, index, value })\r\nconst setCenter = (index, value) => ({ type: SET_CENTER, index, value })\r\nconst setColor = (index, value) => ({ type: SET_COLOR, index, value })\r\n\r\n// selector\r\nexport const getCellData = (state, index) => (state.sudoku[index] ? state.sudoku[index] : 0)\r\nexport const getRow = (index, state) => {\r\n  const i = index * 9\r\n  return state.sudoku.start.slice(i, i + 9)\r\n}\r\n\r\n// epics\r\nexport const epics = combineEpics((action$, state$) =>\r\n  action$.pipe(\r\n    ofType(UPDATE_VALUES),\r\n    map(({ value }) => ({\r\n      selected: getSelected(state$.value),\r\n      mode: getPencilMode(state$.value),\r\n      value\r\n    })),\r\n    mergeMap(({ selected, mode, value }) => {\r\n      switch (mode) {\r\n        case 'normal':\r\n          return _.map(Object.keys(selected), (index) => setValue(index, value))\r\n        case 'corner':\r\n          return _.map(Object.keys(selected), (index) => setCorner(index, value))\r\n        case 'center':\r\n          return _.map(Object.keys(selected), (index) => setCenter(index, value))\r\n        case 'color':\r\n          return _.map(Object.keys(selected), (index) => setColor(index, value))\r\n      }\r\n    })\r\n  )\r\n)\r\n\r\n// reducer\r\nconst setPencilMarks = (state, mode, index, value) => ({\r\n  ...state,\r\n  [index]: {\r\n    ...state[index],\r\n    [mode]: state[index][mode]\r\n      ? _.chain([...state[index][mode], value])\r\n          .unique()\r\n          .first(8)\r\n          .value()\r\n      : [value]\r\n  }\r\n})\r\n\r\nconst initialState = {}\r\nexport const reducer = (state = initialState, { type, index, value, values }) => {\r\n  switch (type) {\r\n    case LOAD_SUDOKU: {\r\n      return _.object(\r\n        _.range(values.length),\r\n        _.map(values, (given, index) => ({ index, given }))\r\n      )\r\n    }\r\n    case SET_VALUE: {\r\n      return { ...state, [index]: { ...state[index], value } }\r\n    }\r\n    case SET_CORNER: {\r\n      return value !== undefined\r\n        ? setPencilMarks(state, 'corner', index, value)\r\n        : { ...state, [index]: { ...state[index], corner: value } }\r\n    }\r\n    case SET_CENTER: {\r\n      return value !== undefined\r\n        ? setPencilMarks(state, 'center', index, value)\r\n        : { ...state, [index]: { ...state[index], center: value } }\r\n    }\r\n    case SET_COLOR: {\r\n      return { ...state, [index]: { ...state[index], color: value } }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { useSelector } from 'react-redux'\r\nimport { getCellData } from 'store/sudoku'\r\nimport { isCellSelected, getCellColor } from 'store/ui'\r\nimport _ from 'underscore'\r\n\r\nconst SudokuCell = ({ id }) => {\r\n  const data = useSelector((state) => getCellData(state, id))\r\n  const selected = useSelector((state) => isCellSelected(state, id))\r\n  const classNames = `sudoku-cell ${boxPosition[id]}`\r\n  const value = data.given || data.value\r\n  const cornerSpans = _.map(data.corner, (value, i) => (\r\n    <span key={`${id}-${i}`} className={`sudoku-corner ${cornerClass[i]}`}>\r\n      {value}\r\n    </span>\r\n  ))\r\n  const centerSpan = data.center && (\r\n    <span key={`${id}-center`} className=\"sudoku-center\">\r\n      {_.reduce(data.center, (value, id) => `${value}${id}`, '')}\r\n    </span>\r\n  )\r\n\r\n  const pencilMarks = [...cornerSpans, centerSpan]\r\n  const backgroundColor = getCellColor(data.color, selected)\r\n  return (\r\n    <div className={classNames} id={id} style={{ backgroundColor }}>\r\n      {value !== 0 && (\r\n        <div className=\"sudoku-value\" style={data.given ? { color: '#040404' } : {}}>\r\n          {value ? value : pencilMarks && pencilMarks.length > 0 ? pencilMarks : ''}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nconst cornerClass = [\r\n  'corner-ul',\r\n  'corner-ur',\r\n  'corner-lr',\r\n  'corner-ll',\r\n  'corner-top',\r\n  'corner-r',\r\n  'corner-bottom',\r\n  'corner-l'\r\n]\r\nconst boxPosition = [\r\n  ...['tl', 'tc', 'tr', 'tl', 'tc', 'tr', 'tl', 'tc', 'tr'],\r\n  ...['cl', 'cc', 'cr', 'cl', 'cc', 'cr', 'cl', 'cc', 'cr'],\r\n  ...['bl', 'bc', 'br', 'bl', 'bc', 'br', 'bl', 'bc', 'br'],\r\n  ...['tl', 'tc', 'tr', 'tl', 'tc', 'tr', 'tl', 'tc', 'tr'],\r\n  ...['cl', 'cc', 'cr', 'cl', 'cc', 'cr', 'cl', 'cc', 'cr'],\r\n  ...['bl', 'bc', 'br', 'bl', 'bc', 'br', 'bl', 'bc', 'br'],\r\n  ...['tl', 'tc', 'tr', 'tl', 'tc', 'tr', 'tl', 'tc', 'tr'],\r\n  ...['cl', 'cc', 'cr', 'cl', 'cc', 'cr', 'cl', 'cc', 'cr'],\r\n  ...['bl', 'bc', 'br', 'bl', 'bc', 'br', 'bl', 'bc', 'br']\r\n]\r\n\r\nexport default SudokuCell\r\n","import { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport _ from 'underscore'\r\nimport SudokuCell from './SudokuCell'\r\nimport { setSelectionMode, getSelected, clearSelected, selectCell, isSelecting } from 'store/ui'\r\n\r\nimport './sudoku.css'\r\n\r\nconst SudokuRow = ({ row }) => {\r\n  return (\r\n    <div className=\"sudoku-row\">\r\n      {_.map(_.range(0, 9), (index) => {\r\n        const id = row * 9 + index\r\n        return <SudokuCell key={id} id={id} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SudokuGrid = () => {\r\n  const dispatch = useDispatch()\r\n  const divRef = useRef()\r\n  const selected = useSelector((state) => getSelected(state))\r\n  const selecting = useSelector((state) => isSelecting(state))\r\n\r\n  const handleEvent = (event) => {\r\n    const clientRect = divRef.current.getBoundingClientRect()\r\n    const cellIndex =\r\n      Math.trunc((event.clientY - clientRect.y) / 50) * 9 +\r\n      Math.trunc((event.clientX - clientRect.x) / 50)\r\n    switch (event.type) {\r\n      case 'mousedown':\r\n        if (!event.shiftKey) {\r\n          dispatch(clearSelected())\r\n        }\r\n        dispatch(setSelectionMode(true))\r\n        dispatch(selectCell(cellIndex))\r\n        break\r\n      case 'mouseup':\r\n        dispatch(setSelectionMode(false))\r\n        break\r\n      case 'mouseover':\r\n        if (selecting && !selected[cellIndex]) {\r\n          dispatch(selectCell(cellIndex))\r\n        }\r\n        break\r\n      default: {\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"sudoku-grid\"\r\n      ref={divRef}\r\n      onMouseDown={handleEvent}\r\n      onMouseOver={handleEvent}\r\n      onMouseUp={handleEvent}\r\n    >\r\n      {_.range(0, 9).map((row, index) => (\r\n        <SudokuRow key={`row-${index}`} row={row} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SudokuGrid\r\n","import SudokuGrid from './SudokuGrid'\r\n\r\nexport default SudokuGrid\r\n","import Button from './Button'\r\n\r\nexport default Button\r\n","import classnames from 'classnames'\r\n\r\nimport './Button.css'\r\n\r\nexport const Button = ({ className = '', style = {}, lable, onClick, value, toggle = false }) => {\r\n  const buttonClassNames = toggle\r\n    ? classnames(`button ${className}`, { 'button-on': value })\r\n    : `button ${className}`\r\n  return (\r\n    <button\r\n      key={`${lable}-button`}\r\n      className={buttonClassNames}\r\n      style={style}\r\n      type=\"button\"\r\n      onClick={(event) => onClick(event)}\r\n    >\r\n      {lable}\r\n    </button>\r\n  )\r\n}\r\nexport default Button\r\n","import NumberBar from './NumberBar'\r\n\r\nexport default NumberBar\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport Button from 'components/Button'\r\nimport { updateValues } from 'store/sudoku'\r\nimport { getPencilMode, getPencilModes, setPencilMode, colors } from 'store/ui'\r\n\r\nimport './NumberBar.css'\r\nimport _ from 'underscore'\r\nconst NumberBar = () => {\r\n  const dispatch = useDispatch()\r\n  const mode = useSelector((state) => getPencilMode(state))\r\n  const handleClick = (value) => {\r\n    dispatch(updateValues(value))\r\n  }\r\n  return (\r\n    <div className=\"number-bar\">\r\n      {_.map(_.range(1, 10), (index) => {\r\n        const colorStyle = { backgroundColor: colors[index - 1] }\r\n        return (\r\n          <Button\r\n            className={'number'}\r\n            style={mode === 'color' ? colorStyle : {}}\r\n            lable={mode !== 'color' && <span className={`number-${mode}`}>{index}</span>}\r\n            onClick={(event) => handleClick(index)}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NumberBar\r\n","export const VerticalDivider = () => {\r\n  return <div className=\"vertical-divider\" />\r\n}\r\n","import ButtonGroup from './ButtonGroup'\r\n\r\nexport default ButtonGroup\r\n","import Button from 'components/Button'\r\nimport _ from 'underscore'\r\n\r\nconst ButtonGroup = ({ buttonState, onClick }) => {\r\n  const clickHandler = (lable) => {\r\n    const newState = _.reduce(\r\n      Object.keys(buttonState),\r\n      (state, button) => ({ ...state, [button]: button === lable }),\r\n      {}\r\n    )\r\n    onClick(newState)\r\n  }\r\n  return _.map(Object.keys(buttonState), (lable) => (\r\n    <Button\r\n      key={`gb-${lable}`}\r\n      lable={lable}\r\n      toggle={true}\r\n      value={buttonState[lable]}\r\n      onClick={() => clickHandler(lable)}\r\n    />\r\n  ))\r\n}\r\n\r\nexport default ButtonGroup\r\n","import ButtonBar from './ButtonBar'\r\n\r\nexport default ButtonBar\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport { VerticalDivider } from './VerticalDivider'\r\nimport Button from 'components/Button'\r\nimport ButtonGroup from 'components/ButtonGroup'\r\nimport { getPencilModes, setPencilMode } from 'store/ui'\r\nimport { updateValues } from 'store/sudoku'\r\nimport './ButtonBar.css'\r\n\r\nconst ButtonBar = () => {\r\n  const dispatch = useDispatch()\r\n  const modes = useSelector((state) => getPencilModes(state))\r\n\r\n  const groupHandler = (newState) => {\r\n    dispatch(setPencilMode(newState))\r\n  }\r\n\r\n  return (\r\n    <div className=\"button-bar\">\r\n      <ButtonGroup buttonState={modes} onClick={groupHandler} />\r\n      <VerticalDivider />\r\n      <Button lable=\"clear\" onClick={() => dispatch(updateValues(undefined))} />\r\n      {/* <Button lable=\"check\" onClick={() => {}} /> */}\r\n      {/* <Button lable=\"undo\" onClick={() => {}} /> */}\r\n      {/* <Button lable=\"redo\" onClick={() => {}} /> */}\r\n    </div>\r\n  )\r\n}\r\nexport default ButtonBar\r\n","import App from './App'\r\n\r\nexport default App\r\n","import { useDispatch, useSelector } from 'react-redux'\nimport SudokuGrid from 'components/SudokuGrid'\nimport { updateValues, setValues, setCorners, setCenters, setColors } from 'store/sudoku'\nimport './App.css'\nimport NumberBar from 'components/NumberBar'\nimport ButtonBar from 'components/ButtonBar'\nimport { getPencilMode } from 'store/ui'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const mode = useSelector((state) => getPencilMode(state))\n  const handleKeyDown = (e) => {\n    if (e.key >= 0 && e.key <= 9) {\n      dispatch(updateValues(+e.key))\n      // switch (mode) {\n      //   case 'normal':\n      //     return dispatch(setValues(+e.key))\n      //   case 'corner':\n      //     return dispatch(setCorners(+e.key))\n      //   case 'center':\n      //     return dispatch(setCenters(+e.key))\n      //   case 'color':\n      //     return dispatch(setColors(+e.key))\n      //   default:\n      //     return\n      // }\n    }\n  }\n  const handleKeyUp = (e) => {}\n\n  return (\n    <div className=\"App\" onKeyDown={handleKeyDown} onKeyUp={handleKeyUp} tabIndex={0}>\n      <header className=\"App-header\">\n        <NumberBar />\n        <SudokuGrid />\n        <ButtonBar />\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","import { combineEpics } from 'redux-observable'\r\n\r\n// constants\r\nconst TOGGLE_ON = 'toggle/TOGGLE_ON'\r\n\r\n// actions\r\nexport const toggleOn = (name) => ({ type: TOGGLE_ON, name })\r\n\r\n// selectors\r\nexport const getToggleNames = (state) => Object.keys(state.toggle)\r\nexport const getSettings = (state, name) => state.toggle[name]\r\n\r\n// epics\r\nexport const epics = combineEpics()\r\n\r\n// reducer\r\nconst initialState = {\r\n  corner: { title: 'Corners', on: false },\r\n  center: { title: 'Center', on: false }\r\n}\r\nexport const reducer = (state = initialState, { type, name }) => {\r\n  switch (type) {\r\n    case TOGGLE_ON:\r\n      return { ...state, [name]: { ...state[name], on: !state[name].on } }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { combineReducers } from 'redux'\r\nimport { combineEpics } from 'redux-observable'\r\nimport ui, { epics as uiEpics } from './ui'\r\nimport sudoku, { epics as sudokuEpics } from './sudoku'\r\nimport toggle, { epics as toggleEpics } from './toggle'\r\n\r\nexport const rootEpic = combineEpics(uiEpics, sudokuEpics, toggleEpics)\r\nconst appReducer = combineReducers({ ui, sudoku, toggle })\r\n\r\nexport const rootReducer = (state, action) => {\r\n  if (action.type === 'RESET') {\r\n    state = undefined\r\n  }\r\n  return appReducer(state, action)\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { createEpicMiddleware } from 'redux-observable'\r\nimport { rootReducer, rootEpic } from './root'\r\n\r\nconst configureStore = (initialState) => {\r\n  const epicMiddleware = createEpicMiddleware({ dependencies: {} })\r\n  const composeEnhancers =\r\n    (process.env.NODE_ENV !== 'production' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(epicMiddleware))\r\n  )\r\n  epicMiddleware.run(rootEpic)\r\n  return store\r\n}\r\n\r\nexport default configureStore\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport App from 'components/App'\nimport configureStore from 'store/configureStore'\nimport { LOAD_SUDOKU } from 'store/sudoku'\n\nimport './index.css'\n\nconst initialState = window.___INITIAL_STATE___\nconst store = configureStore(initialState)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\nconst testSudoku = [\n  ...[0, 7, 2, 0, 0, 9, 0, 0, 0],\n  ...[0, 3, 0, 6, 0, 0, 4, 0, 0],\n  ...[0, 0, 1, 0, 0, 0, 0, 8, 7],\n  ...[1, 0, 0, 0, 0, 0, 7, 0, 0],\n  ...[9, 0, 0, 2, 0, 3, 0, 0, 0],\n  ...[0, 0, 0, 0, 0, 0, 0, 0, 6],\n  ...[0, 0, 0, 3, 0, 0, 5, 6, 0],\n  ...[0, 0, 0, 0, 0, 4, 9, 0, 0],\n  ...[0, 0, 0, 0, 1, 8, 0, 0, 2]\n]\nstore.dispatch({ type: LOAD_SUDOKU, values: testSudoku })\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}