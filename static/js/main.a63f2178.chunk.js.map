{"version":3,"sources":["reportWebVitals.js","store/ui.js","store/sudoku.js","components/SudokuGrid/SudokuCell.js","components/SudokuGrid/SudokuGrid.js","components/SudokuGrid/index.js","components/Button/index.js","components/Button/Button.js","components/NumberBar/index.js","components/NumberBar/NumberBar.js","components/ButtonBar/VerticalDivider.js","components/ButtonGroup/index.js","components/ButtonGroup/ButtonGroup.js","components/ButtonBar/index.js","components/ButtonBar/ButtonBar.js","components/App/index.js","components/App/App.js","store/toggle.js","store/root.js","store/configureStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_SELECTION_MODE","SELECT_CELL","CLEAR_SELECTED","SET_PENCIL_MODE","setSelectionMode","value","type","selectCell","index","clearSelected","getSelected","state","ui","selected","getPencilMode","_","reduce","Object","keys","pencilMode","mode","undefined","colors","epics","combineEpics","initialState","selecting","normal","corner","center","color","show","reducer","LOAD_SUDOKU","UPDATE_VALUES","SET_VALUE","SET_CORNER","SET_CENTER","SET_COLOR","updateValues","action$","state$","pipe","ofType","map","filter","mergeMap","toSelect","chain","sudoku","cell","given","getCellsForValues","setValue","setCorner","setCenter","setColor","setPencilMarks","unique","first","values","object","range","length","cornerClass","boxPosition","SudokuCell","id","data","useSelector","getCellData","isCellSelected","classNames","cornerSpans","i","className","centerSpan","pencilMarks","backgroundColor","colorMark","tinycolor","mix","getCellColor","style","SudokuRow","row","SudokuGrid","dispatch","useDispatch","divRef","useRef","isSelecting","handleEvent","event","clientRect","current","getBoundingClientRect","gridSize","width","cellIndex","Math","trunc","clientY","y","clientX","x","shiftKey","ref","onMouseDown","onMouseOver","onMouseUp","Button","lable","onClick","toggle","buttonClassNames","NumberBar","colorStyle","VerticalDivider","ButtonGroup","buttonState","clickHandler","newState","button","ButtonBar","modes","getPencilModes","App","onKeyDown","e","key","tabIndex","TOGGLE_ON","title","on","name","rootEpic","uiEpics","sudokuEpics","toggleEpics","appReducer","combineReducers","rootReducer","action","configureStore","epicMiddleware","createEpicMiddleware","dependencies","composeEnhancers","compose","store","createStore","applyMiddleware","run","window","___INITIAL_STATE___","ReactDOM","render","StrictMode","document","getElementById","testSudoku"],"mappings":"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","file":"static/js/main.a63f2178.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineEpics } from 'redux-observable'\r\nimport tinycolor from 'tinycolor2'\r\nimport _ from 'underscore'\r\n\r\n// constants\r\nconst SET_SELECTION_MODE = 'ui/SET_SELECTION_MODE'\r\nconst SELECT_CELL = 'ui/SELECT_CELL'\r\nconst CLEAR_SELECTED = 'ui/CLEAR_SELECTED'\r\nconst SET_PENCIL_MODE = 'ui/SET_PENCIL_MODE'\r\n\r\n// actions\r\nexport const setSelectionMode = (value) => ({ type: SET_SELECTION_MODE, value })\r\nexport const selectCell = (index) => ({ type: SELECT_CELL, index })\r\nexport const clearSelected = () => ({ type: CLEAR_SELECTED })\r\nexport const setPencilMode = (mode) => ({ type: SET_PENCIL_MODE, mode })\r\n\r\n// selector\r\nexport const isSelecting = (state, index) => state.ui.selecting\r\nexport const isCellSelected = (state, index) => state.ui.selected[index]\r\nexport const getSelected = (state) => state.ui.selected\r\nexport const getPencilModes = (state) => state.ui.pencilMode\r\nexport const getPencilMode = (state) => {\r\n  const mode = _.reduce(\r\n    Object.keys(state.ui.pencilMode),\r\n    (mode, index) => (state.ui.pencilMode[index] ? index : mode),\r\n    undefined\r\n  )\r\n  return mode || 'normal'\r\n}\r\n\r\nexport const fromColors = (added, base) => {\r\n  var mix = [0, 0, 0, 0]\r\n  mix[3] = 1 - (1 - added[3]) * (1 - base[3]) // alpha\r\n  mix[0] = Math.round(\r\n    (added[0] * added[3]) / mix[3] + (base[0] * base[3] * (1 - added[3])) / mix[3]\r\n  ) // red\r\n  mix[1] = Math.round(\r\n    (added[1] * added[3]) / mix[3] + (base[1] * base[3] * (1 - added[3])) / mix[3]\r\n  ) // green\r\n  mix[2] = Math.round(\r\n    (added[2] * added[3]) / mix[3] + (base[2] * base[3] * (1 - added[3])) / mix[3]\r\n  ) // blue\r\n}\r\nexport const getCellColor = (colorMark, selected) => {\r\n  return colorMark && selected\r\n    ? tinycolor.mix(colors[colorMark - 1], '#ffffa0')\r\n    : colorMark\r\n    ? colors[colorMark - 1]\r\n    : selected\r\n    ? '#ffffa0'\r\n    : 'snow'\r\n}\r\nexport const colors = [\r\n  '#0074D9AA', //blue\r\n  '#7FDBFFAA', //aqua\r\n  '#39CCCCAA', //teal\r\n  '#3D9970AA', //olive\r\n  '#FFDC0088', //yellow\r\n  '#FF851BAA', //orange\r\n  '#85144B44', //maroon\r\n  '#B10DC9FF', //purple\r\n  '#DDDDDDFF' //silver\r\n]\r\n\r\n// epics\r\nexport const epics = combineEpics()\r\n\r\n// reducer\r\nconst initialState = {\r\n  selecting: false,\r\n  selected: [],\r\n  pencilMode: { normal: true, corner: false, center: false, color: false, show: false }\r\n}\r\nexport const reducer = (state = initialState, { type, value, index, mode }) => {\r\n  switch (type) {\r\n    case SET_SELECTION_MODE:\r\n      return { ...state, selecting: value }\r\n    case CLEAR_SELECTED:\r\n      return { ...state, selected: [] }\r\n    case SELECT_CELL:\r\n      return { ...state, selected: { ...state.selected, [index]: true } }\r\n    case SET_PENCIL_MODE:\r\n      return { ...state, pencilMode: mode }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { combineEpics, ofType } from 'redux-observable'\r\nimport { map, mergeMap, filter } from 'rxjs/operators'\r\nimport _ from 'underscore'\r\nimport { getSelected, getPencilMode, selectCell, clearSelected } from 'store/ui'\r\n\r\n// constants\r\nexport const LOAD_SUDOKU = 'sudoku/LOAD_SUDOKU'\r\nexport const UPDATE_VALUES = 'sudoku/UPDATE_VALUES'\r\nexport const SET_VALUE = 'sudoku/SET_VALUE'\r\nexport const SET_CORNER = 'sudoku/SET_CORNER'\r\nexport const SET_CENTER = 'sudoku/SET_CENTER'\r\nexport const SET_COLOR = 'sudoku/SET_COLOR'\r\nexport const SET_PENCIL_MARK = 'sudoku/SET_PENCIL_MARK'\r\n\r\n// actions\r\nexport const loadSudoku = (values) => ({ type: LOAD_SUDOKU, values })\r\nexport const updateValues = (value) => ({ type: UPDATE_VALUES, value })\r\nconst setValue = (index, value) => ({ type: SET_VALUE, index, value })\r\nconst setCorner = (index, value) => ({ type: SET_CORNER, index, value })\r\nconst setCenter = (index, value) => ({ type: SET_CENTER, index, value })\r\nconst setColor = (index, value) => ({ type: SET_COLOR, index, value })\r\n\r\n// selector\r\nexport const getCellData = (state, index) => (state.sudoku[index] ? state.sudoku[index] : 0)\r\nexport const getCellsForValues = (state, value) =>\r\n  _.chain(state.sudoku)\r\n    .filter((cell) => cell.given === value || cell.value === value)\r\n    .map((cell) => cell.index)\r\n    .value()\r\n\r\n// epics\r\nexport const epics = combineEpics(\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(UPDATE_VALUES),\r\n      map(({ value }) => ({\r\n        mode: getPencilMode(state$.value),\r\n        value\r\n      })),\r\n      filter(({ mode, value }) => mode === 'show'),\r\n      mergeMap(({ value }) => {\r\n        const toSelect = getCellsForValues(state$.value, value)\r\n        const actions = [\r\n          clearSelected(),\r\n          ...(value !== undefined ? _.map(toSelect, (index) => selectCell(index, value)) : [])\r\n        ]\r\n        return actions\r\n      })\r\n    ),\r\n\r\n  (action$, state$) =>\r\n    action$.pipe(\r\n      ofType(UPDATE_VALUES),\r\n      map(({ value }) => ({\r\n        mode: getPencilMode(state$.value),\r\n        value\r\n      })),\r\n      filter(({ mode }) => mode !== 'show'),\r\n      map(({ mode, value }) => ({\r\n        selected: getSelected(state$.value),\r\n        mode,\r\n        value\r\n      })),\r\n      mergeMap(({ selected, mode, value }) => {\r\n        switch (mode) {\r\n          case 'normal':\r\n            return _.map(Object.keys(selected), (index) => setValue(index, value))\r\n          case 'corner':\r\n            return _.map(Object.keys(selected), (index) => setCorner(index, value))\r\n          case 'center':\r\n            return _.map(Object.keys(selected), (index) => setCenter(index, value))\r\n          case 'color':\r\n            return _.map(Object.keys(selected), (index) => setColor(index, value))\r\n          default:\r\n            return\r\n        }\r\n      })\r\n    )\r\n)\r\n\r\n// reducer\r\nconst setPencilMarks = (state, mode, index, value) => ({\r\n  ...state,\r\n  [index]: {\r\n    ...state[index],\r\n    [mode]: state[index][mode]\r\n      ? _.chain([...state[index][mode], value])\r\n          .unique()\r\n          .first(8)\r\n          .value()\r\n      : [value]\r\n  }\r\n})\r\n\r\nconst initialState = {}\r\nexport const reducer = (state = initialState, { type, index, value, values }) => {\r\n  switch (type) {\r\n    case LOAD_SUDOKU: {\r\n      return _.object(\r\n        _.range(values.length),\r\n        _.map(values, (given, index) => ({ index, given }))\r\n      )\r\n    }\r\n    case SET_VALUE: {\r\n      return { ...state, [index]: { ...state[index], value } }\r\n    }\r\n    case SET_CORNER: {\r\n      return value !== undefined\r\n        ? setPencilMarks(state, 'corner', index, value)\r\n        : { ...state, [index]: { ...state[index], corner: value } }\r\n    }\r\n    case SET_CENTER: {\r\n      return value !== undefined\r\n        ? setPencilMarks(state, 'center', index, value)\r\n        : { ...state, [index]: { ...state[index], center: value } }\r\n    }\r\n    case SET_COLOR: {\r\n      return { ...state, [index]: { ...state[index], color: value } }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { useSelector } from 'react-redux'\r\nimport { getCellData } from 'store/sudoku'\r\nimport { isCellSelected, getCellColor } from 'store/ui'\r\nimport _ from 'underscore'\r\n\r\nconst SudokuCell = ({ id }) => {\r\n  const data = useSelector((state) => getCellData(state, id))\r\n  const selected = useSelector((state) => isCellSelected(state, id))\r\n  const classNames = `sudoku-cell ${boxPosition[id]}`\r\n  const value = data.given || data.value\r\n  const cornerSpans = _.map(data.corner, (value, i) => (\r\n    <span key={`${id}-${i}`} className={`sudoku-corner ${cornerClass[i]}`}>\r\n      {value}\r\n    </span>\r\n  ))\r\n  const centerSpan = data.center && (\r\n    <span key={`${id}-center`} className=\"sudoku-center\">\r\n      {_.reduce(data.center, (value, id) => `${value}${id}`, '')}\r\n    </span>\r\n  )\r\n\r\n  const pencilMarks = [...cornerSpans, centerSpan]\r\n  const backgroundColor = getCellColor(data.color, selected)\r\n  return (\r\n    <div className={classNames} id={id} style={{ backgroundColor }}>\r\n      {value !== 0 && (\r\n        <div className=\"sudoku-value\" style={data.given ? { color: '#040404' } : {}}>\r\n          {value ? value : pencilMarks && pencilMarks.length > 0 ? pencilMarks : ''}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nconst cornerClass = [\r\n  'corner-ul',\r\n  'corner-ur',\r\n  'corner-lr',\r\n  'corner-ll',\r\n  'corner-top',\r\n  'corner-r',\r\n  'corner-bottom',\r\n  'corner-l'\r\n]\r\nconst boxPosition = [\r\n  ...['tl', 'tc', 'tr', 'tl', 'tc', 'tr', 'tl', 'tc', 'tr'],\r\n  ...['cl', 'cc', 'cr', 'cl', 'cc', 'cr', 'cl', 'cc', 'cr'],\r\n  ...['bl', 'bc', 'br', 'bl', 'bc', 'br', 'bl', 'bc', 'br'],\r\n  ...['tl', 'tc', 'tr', 'tl', 'tc', 'tr', 'tl', 'tc', 'tr'],\r\n  ...['cl', 'cc', 'cr', 'cl', 'cc', 'cr', 'cl', 'cc', 'cr'],\r\n  ...['bl', 'bc', 'br', 'bl', 'bc', 'br', 'bl', 'bc', 'br'],\r\n  ...['tl', 'tc', 'tr', 'tl', 'tc', 'tr', 'tl', 'tc', 'tr'],\r\n  ...['cl', 'cc', 'cr', 'cl', 'cc', 'cr', 'cl', 'cc', 'cr'],\r\n  ...['bl', 'bc', 'br', 'bl', 'bc', 'br', 'bl', 'bc', 'br']\r\n]\r\n\r\nexport default SudokuCell\r\n","import { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport _ from 'underscore'\r\nimport SudokuCell from './SudokuCell'\r\nimport { setSelectionMode, getSelected, clearSelected, selectCell, isSelecting } from 'store/ui'\r\n\r\nimport './sudoku.css'\r\n\r\nconst SudokuRow = ({ row }) => {\r\n  return (\r\n    <div className=\"sudoku-row\">\r\n      {_.map(_.range(0, 9), (index) => {\r\n        const id = row * 9 + index\r\n        return <SudokuCell key={id} id={id} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SudokuGrid = () => {\r\n  const dispatch = useDispatch()\r\n  const divRef = useRef()\r\n  const selected = useSelector((state) => getSelected(state))\r\n  const selecting = useSelector((state) => isSelecting(state))\r\n\r\n  const handleEvent = (event) => {\r\n    const clientRect = divRef.current.getBoundingClientRect()\r\n    const gridSize = clientRect.width / 9\r\n    const cellIndex =\r\n      Math.trunc((event.clientY - clientRect.y) / gridSize) * 9 +\r\n      Math.trunc((event.clientX - clientRect.x) / gridSize)\r\n    switch (event.type) {\r\n      case 'mousedown':\r\n        if (!event.shiftKey) {\r\n          dispatch(clearSelected())\r\n        }\r\n        dispatch(setSelectionMode(true))\r\n        dispatch(selectCell(cellIndex))\r\n        break\r\n      case 'mouseup':\r\n        dispatch(setSelectionMode(false))\r\n        break\r\n      case 'mouseover':\r\n        if (selecting && !selected[cellIndex]) {\r\n          dispatch(selectCell(cellIndex))\r\n        }\r\n        break\r\n      default: {\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"sudoku-grid\"\r\n      ref={divRef}\r\n      onMouseDown={handleEvent}\r\n      onMouseOver={handleEvent}\r\n      onMouseUp={handleEvent}\r\n    >\r\n      {_.range(0, 9).map((row, index) => (\r\n        <SudokuRow key={`row-${index}`} row={row} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SudokuGrid\r\n","import SudokuGrid from './SudokuGrid'\r\n\r\nexport default SudokuGrid\r\n","import Button from './Button'\r\n\r\nexport default Button\r\n","import classNames from 'classnames'\r\n\r\nimport './Button.css'\r\n\r\nexport const Button = ({ className = '', style = {}, lable, onClick, value, toggle = false }) => {\r\n  const buttonClassNames = toggle\r\n    ? classNames(`button ${className}`, { 'button-on': value })\r\n    : `button ${className}`\r\n  return (\r\n    <button\r\n      key={`${lable}-button`}\r\n      className={buttonClassNames}\r\n      style={style}\r\n      type=\"button\"\r\n      onClick={(event) => onClick(event)}\r\n    >\r\n      {lable}\r\n    </button>\r\n  )\r\n}\r\nexport default Button\r\n","import NumberBar from './NumberBar'\r\n\r\nexport default NumberBar\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport Button from 'components/Button'\r\nimport { updateValues } from 'store/sudoku'\r\nimport { getPencilMode, colors } from 'store/ui'\r\n\r\nimport './NumberBar.css'\r\nimport _ from 'underscore'\r\nconst NumberBar = () => {\r\n  const dispatch = useDispatch()\r\n  const mode = useSelector((state) => getPencilMode(state))\r\n  const handleClick = (value) => {\r\n    dispatch(updateValues(value))\r\n  }\r\n  return (\r\n    <div className=\"number-bar\">\r\n      {_.map(_.range(1, 10), (index) => {\r\n        const colorStyle = { backgroundColor: colors[index - 1] }\r\n        return (\r\n          <Button\r\n            key={index}\r\n            className={'number'}\r\n            style={mode === 'color' ? colorStyle : {}}\r\n            lable={mode !== 'color' && <span className={`number-${mode}`}>{index}</span>}\r\n            onClick={(event) => handleClick(index)}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NumberBar\r\n","export const VerticalDivider = () => {\r\n  return <div className=\"vertical-divider\" />\r\n}\r\n","import ButtonGroup from './ButtonGroup'\r\n\r\nexport default ButtonGroup\r\n","import Button from 'components/Button'\r\nimport _ from 'underscore'\r\n\r\nconst ButtonGroup = ({ buttonState, onClick }) => {\r\n  const clickHandler = (lable) => {\r\n    const newState = _.reduce(\r\n      Object.keys(buttonState),\r\n      (state, button) => ({ ...state, [button]: button === lable }),\r\n      {}\r\n    )\r\n    onClick(newState)\r\n  }\r\n  return _.map(Object.keys(buttonState), (lable) => (\r\n    <Button\r\n      key={`gb-${lable}`}\r\n      lable={lable}\r\n      toggle={true}\r\n      value={buttonState[lable]}\r\n      onClick={() => clickHandler(lable)}\r\n    />\r\n  ))\r\n}\r\n\r\nexport default ButtonGroup\r\n","import ButtonBar from './ButtonBar'\r\n\r\nexport default ButtonBar\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport { VerticalDivider } from './VerticalDivider'\r\nimport Button from 'components/Button'\r\nimport ButtonGroup from 'components/ButtonGroup'\r\nimport { getPencilModes, setPencilMode } from 'store/ui'\r\nimport { updateValues } from 'store/sudoku'\r\nimport './ButtonBar.css'\r\n\r\nconst ButtonBar = () => {\r\n  const dispatch = useDispatch()\r\n  const modes = useSelector((state) => getPencilModes(state))\r\n\r\n  const groupHandler = (newState) => {\r\n    dispatch(setPencilMode(newState))\r\n  }\r\n\r\n  return (\r\n    <div className=\"button-bar\">\r\n      <ButtonGroup buttonState={modes} onClick={groupHandler} />\r\n      <VerticalDivider />\r\n      <Button lable=\"clear\" onClick={() => dispatch(updateValues(undefined))} />\r\n      {/* <Button lable=\"check\" onClick={() => {}} /> */}\r\n      {/* <Button lable=\"undo\" onClick={() => {}} /> */}\r\n      {/* <Button lable=\"redo\" onClick={() => {}} /> */}\r\n    </div>\r\n  )\r\n}\r\nexport default ButtonBar\r\n","import App from './App'\r\n\r\nexport default App\r\n","import { useDispatch } from 'react-redux'\nimport SudokuGrid from 'components/SudokuGrid'\nimport { updateValues } from 'store/sudoku'\nimport './App.css'\nimport NumberBar from 'components/NumberBar'\nimport ButtonBar from 'components/ButtonBar'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const handleKeyDown = (e) => {\n    if (e.key >= 0 && e.key <= 9) {\n      dispatch(updateValues(+e.key))\n    }\n  }\n\n  return (\n    <div className=\"App\" onKeyDown={handleKeyDown} tabIndex={0}>\n      <header className=\"App-header\">\n        <div className=\"App-container\">\n          <NumberBar />\n          <SudokuGrid />\n          <ButtonBar />\n        </div>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","import { combineEpics } from 'redux-observable'\r\n\r\n// constants\r\nconst TOGGLE_ON = 'toggle/TOGGLE_ON'\r\n\r\n// actions\r\nexport const toggleOn = (name) => ({ type: TOGGLE_ON, name })\r\n\r\n// selectors\r\nexport const getToggleNames = (state) => Object.keys(state.toggle)\r\nexport const getSettings = (state, name) => state.toggle[name]\r\n\r\n// epics\r\nexport const epics = combineEpics()\r\n\r\n// reducer\r\nconst initialState = {\r\n  corner: { title: 'Corners', on: false },\r\n  center: { title: 'Center', on: false }\r\n}\r\nexport const reducer = (state = initialState, { type, name }) => {\r\n  switch (type) {\r\n    case TOGGLE_ON:\r\n      return { ...state, [name]: { ...state[name], on: !state[name].on } }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { combineReducers } from 'redux'\r\nimport { combineEpics } from 'redux-observable'\r\nimport ui, { epics as uiEpics } from './ui'\r\nimport sudoku, { epics as sudokuEpics } from './sudoku'\r\nimport toggle, { epics as toggleEpics } from './toggle'\r\n\r\nexport const rootEpic = combineEpics(uiEpics, sudokuEpics, toggleEpics)\r\nconst appReducer = combineReducers({ ui, sudoku, toggle })\r\n\r\nexport const rootReducer = (state, action) => {\r\n  if (action.type === 'RESET') {\r\n    state = undefined\r\n  }\r\n  return appReducer(state, action)\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { createEpicMiddleware } from 'redux-observable'\r\nimport { rootReducer, rootEpic } from './root'\r\n\r\nconst configureStore = (initialState) => {\r\n  const epicMiddleware = createEpicMiddleware({ dependencies: {} })\r\n  const composeEnhancers =\r\n    (process.env.NODE_ENV !== 'production' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(epicMiddleware))\r\n  )\r\n  epicMiddleware.run(rootEpic)\r\n  return store\r\n}\r\n\r\nexport default configureStore\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport App from 'components/App'\nimport configureStore from 'store/configureStore'\nimport { LOAD_SUDOKU } from 'store/sudoku'\n\nimport './index.css'\n\nconst initialState = window.___INITIAL_STATE___\nconst store = configureStore(initialState)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\nconst testSudoku = [\n  ...[0, 7, 2, 0, 0, 9, 0, 0, 0],\n  ...[0, 3, 0, 6, 0, 0, 4, 0, 0],\n  ...[0, 0, 1, 0, 0, 0, 0, 8, 7],\n  ...[1, 0, 0, 0, 0, 0, 7, 0, 0],\n  ...[9, 0, 0, 2, 0, 3, 0, 0, 0],\n  ...[0, 0, 0, 0, 0, 0, 0, 0, 6],\n  ...[0, 0, 0, 3, 0, 0, 5, 6, 0],\n  ...[0, 0, 0, 0, 0, 4, 9, 0, 0],\n  ...[0, 0, 0, 0, 1, 8, 0, 0, 2]\n]\nstore.dispatch({ type: LOAD_SUDOKU, values: testSudoku })\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}